#panel-container {
	height: 100%;
	display: none;
}

#panel-container.shown {
	display: revert;
}

#panel-container > panel-grid {
	display: block;
	height: 100%;
}

panel-grid,
.control,
text-label span {
	background-size: cover;
	background-position: center;
}

panel-view {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	padding: var(--gap);

	z-index: -1;

	display: grid;
	grid-template-rows: repeat(var(--grid-rows), 1fr);
	grid-template-columns: repeat(var(--grid-columns), 1fr);
	grid-auto-rows: 0;
	grid-auto-flow: dense;
	grid-gap: var(--gap);
}

panel-view.active {
	z-index: auto;
}

.cell {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;

	padding: var(--inset);

	grid-row-start: var(--row);
	grid-row-end: span var(--row-span);
	grid-column-start: var(--column);
	grid-column-end: span var(--column-span);

	min-width: 0;
	min-height: 0;
}

.container {
	box-sizing: border-box;

	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	transform: translate(var(--offset-x), var(--offset-y));
}

.cell > .container > button {
	width: 100%;
	height: 100%;
	outline: none;
}

.cell.circle.auto-size .container,
.cell.square.auto-size .container {
	--cell-width: calc((100vw - var(--gap)) / var(--grid-columns) - var(--gap) - var(--inset) * 2);
	--cell-height: calc((100vh - var(--gap)) / var(--grid-rows) - var(--gap) - var(--inset) * 2);
	width: var(--cell-height);
	max-width: var(--cell-width);
	height: var(--cell-width);
	max-height: var(--cell-height);
}

.cell.circle button {
	border-radius: 50% !important;
}

.cell .label {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	display: flex;
	pointer-events: none;
	/*touch-action: none;*/
	--offset-x: 0;
	--offset-y: 0;
}

text-label {
	z-index: 1;
}

.label span {
	transform: translate(var(--offset-x), var(--offset-y));
	padding: 0 0.4em;
}

image-label img {
	width: 100%;
	height: 100%;
	object-fit: contain;
}

input[type=range] {
	appearance: none;
	background: none;
	width: 100%;
	margin: 0;
}

input[type=range]:focus {
	outline: none;
}

input[type=range]::-webkit-slider-thumb {
	appearance: none;
	/* this needs to be set manually to center the thumb vertically */
	margin-top: calc(var(--track-height) / 2 - var(--thumb-height) / 2);
}

input[type=range]::-webkit-slider-runnable-track {
	box-sizing: content-box;
}
